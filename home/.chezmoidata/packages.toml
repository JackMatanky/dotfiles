# -----------------------------------------------------------------------------
# File: ~/.local/share/chezmoi/.chezmoidata/packages.toml
# Purpose: Declarative package list consumed by chezmoi run_onchange script(s).
# Docs: https://www.chezmoi.io/user-guide/advanced/install-packages-declaratively/
# Reference: https://www.chezmoi.io/reference/special-directories/chezmoidata/
# 
# Structure:
# - [packages.common.*] - Cross-platform packages available on most systems
# - [packages.darwin.*] - macOS specific packages (Homebrew, Casks, MAS)
# - [packages.linux.*] - Linux specific packages (apt, flatpak, snap)
# - [packages.cargo.*] - Rust packages (cargo install)
# - [packages.npm.*] - Node.js packages (npm install -g)
# - [packages.python.*] - Python packages (pip install)
# -----------------------------------------------------------------------------

# ============================================================================ #
#                              COMMON PACKAGES                                #
# ============================================================================ #
# Cross-platform packages that work on both macOS and Linux

[packages.common]

# Core development tools available across platforms
dev_tools = [
  "git",
  "git-lfs",
  "go",
  "node",
  "python3",
  "rust"  # May need platform-specific installation
]

# Essential CLI utilities
cli_tools = [
  "curl",
  "jq",
  "ripgrep",
  "fd",
  "bat",
  "fzf",
  "eza",
  "zoxide"
]

# Text editors and IDEs that are cross-platform
editors = [
  "neovim"
  # "helix" - available on some platforms
]

# ============================================================================ #
#                                MACOS PACKAGES                               #
# ============================================================================ #

[packages]

# Everything here targets macOS (darwin). If you later support Linux,
# add a parallel [packages.linux] (or [packages.common]) section and
# split cross-platform formulae accordingly.
[packages.darwin]

# ----------------------- Homebrew taps -----------------------
taps = [
  "homebrew/bundle",
  "homebrew/services",
  "zegervdv/zathura",
  "felixkratz/formulae",
  "nikitabobko/tap",
  "jesseduffield/lazygit"
]

# ------------------------- Brew (CLI) ------------------------
brews = [
  # Shells
  "bash",
  "nushell",

  # Terminal environment
  "zellij",
  "tmux",
  "tpm",

  # Dotfiles managers
  "stow",
  "chezmoi",

  # Environment management
  "direnv",
  "just",
  "keychain",
  # "sops",  # commented in Brewfile

  # Scripting & development
  "shellcheck",
  "shfmt",

  # Shell enhancements
  "atuin",
  "carapace",
  "starship",
  "yazi",

  # Shell plugins
  "bash-completion@2",
  "zsh-autosuggestions",
  "zsh-syntax-highlighting",

  # CLI utilities
  "eza",
  "fzf",
  "zoxide",
  "fd",
  "ripgrep",
  "bat",
  "sd",
  "tlrc",
  "jq",
  "sourcemeta/apps/jsonschema",
  # "mermaid-cli", # commented in Brewfile

  # AI tools
  "gemini-cli",
  "ollama",

  # Version control
  "git",
  "git-sizer",
  "git-lfs",
  "git-filter-repo",
  "git-delta",
  "gitleaks",
  "jesseduffield/lazygit/lazygit",
  "gh",

  # Languages & runtimes
  "go",
  "lua",
  "mysql",
  "node",
  "openjdk",
  "postgresql@17",
  "python@3.13",
  "ruby",
  # "rust",  # commented in Brewfile

  # Language servers
  "lua-language-server",
  "marksman",
  "basedpyright",
  "rust-analyzer",
  "solargraph",
  "texlab",
  "typescript-language-server",
  "vscode-langservers-extracted",
  "yaml-language-server",

  # Python toolchain
  "pyenv",
  "pyenv-virtualenv",
  "uv",
  "ipython",
  "jupyterlab",
  "jupytext",

  # Lua toolchain
  "luajit",
  "luarocks",

  # Linters & formatters
  "prettier",
  "cspell",
  "golangci-lint",
  "markdownlint-cli2",
  "ruff",
  "sqlfluff",
  "sql-formatter",
  "stylua",

  # Modal editors
  "neovim",

  # Document processing & viewing (CLI libs)
  "pandoc",
  "img2pdf",
  "qpdf",
  "poppler",

  # OCR
  "ocrmypdf",
  "tesseract",

  # Image processing
  "imagemagick",
  "webp",
  "libavif",
  "graphviz",

  # Multimedia
  "ffmpeg",

  # macOS-specific CLI
  "ical-buddy",
  "switchaudio-osx",
  "nowplaying-cli",

  # Mac App Store helper
  "mas"
]

# --------------- Services: restart on change (advisory) ---------------
# Your script can use this to conditionally (re)start services when the
# package list changes, e.g.:
#   for p in ${services_restart_on_change[@]}; do brew services restart "$p"; done
services_restart_on_change = [
  "atuin",
  "mysql",
  "postgresql@17"
]

# -------------------------- Brew casks --------------------------
casks = [
  # Terminal emulators
  "ghostty",
  "warp",
  # "wezterm",   # commented in Brewfile

  # Neovim client
  # "neovide",   # commented in Brewfile

  # IDEs & editors
  "zed",
  "zed@preview",
  "visual-studio-code",
  # "vscodium",  # commented in Brewfile

  # SQL clients
  "mysqlworkbench",
  "pgadmin4",

  # PKM / knowledge tools
  "obsidian",
  "anki",
  "calibre",
  "zotero",
  "xournal++",

  # Office & document tools
  "libreoffice",
  "libreoffice-language-pack",
  "sioyek",
  "adobe-digital-editions",

  # Productivity
  "nikitabobko/tap/aerospace",
  "displaylink",
  "espanso",

  # AI tools (desktop)
  "chatgpt",
  "claude",
  "claude-code",
  "lm-studio",
  "ollama",  # note: also installed as brew formula above

  # Cloud storage
  "google-drive",
  "onedrive",

  # Media
  "vlc",

  # Communication
  "slack",
  "zoom",

  # Misc
  "kicad",
  "qbittorrent",
  "bitwarden",

  # Fonts
  "sf-symbols",
  "font-fira-code-nerd-font",
  "font-hack-nerd-font",
  "font-jetbrains-mono-nerd-font",
  "font-sf-mono",
  "font-sf-pro",

  # Zathura (PDF) stack from tap added above
  "zathura",
  "zathura-pdf-mupdf"
]

# ---------------------- Mac App Store (mas) ----------------------
# Keys are the visible app names; values are numeric MAS IDs.
# (Underscores are allowed as digit separators in TOML numbers.)
[packages.darwin.mas]
OneDrive = 823_766_827
PDFgear  = 6_469_021_132

# Apple built-ins (from MAS)
iMovie  = 408_981_434
Keynote = 409_183_694
Numbers = 409_203_825
Pages   = 409_201_541

# Safari extensions
AdBlock                 = 1_402_042_596
Bitwarden               = 1_352_778_147
"Documents Translator"  = 1_566_993_561
"G App Launcher"        = 1_543_803_459
Mailbutler              = 1_313_355_438
"Obsidian Web Clipper"  = 6_720_708_363
OneTab                  = 1_540_160_809
# darker                = 1_637_413_102  # commented in Brewfile

# --------------------- VS Code Extensions ---------------------
# Install via `code --install-extension ...`
vscode = [
  # UI & themes
  "catppuccin.catppuccin-vsc",
  "ibm.output-colorizer",
  "naumovs.color-highlight",
  "oderwat.indent-rainbow",
  "vscode-icons-team.vscode-icons",

  # Code navigation & productivity
  "alefragnani.project-manager",
  "gruntfuggly.todo-tree",
  # "usernamehw.errorlens",

  # Productivity & AI utilities
  # "patbenatar.advanced-new-file",
  "albert.tabout",
  "almenon.arepl",
  "codeium.codeium",
  "github.copilot",
  "github.copilot-chat",
  "ionutvmi.path-autocomplete",
  "njpwerner.autodocstring",
  "randomfractalsinc.snippets-viewer",

  # Comments
  "aaron-bond.better-comments",
  "dnut.rewrap-revived",
  "exodiusstudios.comment-anchors",
  "polymermallard.box-comment",
  "stackbreak.comment-divider",

  # RegEx
  "chrmarti.regex",
  "louiswt.regexp-preview",

  # Vim & modal editing
  "asvetliakov.vscode-neovim",
  "julianiaquinandi.nvim-ui-modifier",
  "lancewilhelm.nvim-dashboard",
  "vspacecode.whichkey",

  # Linters & formatters
  "esbenp.prettier-vscode",
  "editorconfig.editorconfig",
  "lacroixdavid1.vscode-format-context-menu",
  "shardulm94.trailing-spaces",
  "streetsidesoftware.code-spell-checker",
  # "jkillian.custom-local-formatters",
  # "jbockle.jbockle-format-files",

  # Environment
  "mikestead.dotenv",

  # Shell utilities
  "constneo.vscode-nushell-format",
  "foxundermoon.shell-format",
  "thenuprojectcontributors.vscode-nushell-lang",
  "timonwong.shellcheck",

  # Git & VCS
  # "eamodio.gitlens",
  "github.remotehub",
  "github.vscode-github-actions",
  "github.vscode-pull-request-github",
  "gitlab.gitlab-workflow",
  "mhutchie.git-graph",
  "vivaxy.vscode-conventional-commits",
  "vsls-contrib.gistfs",

  # Remote repos
  "ms-vscode-remote.remote-ssh",
  "ms-vscode-remote.remote-ssh-edit",
  "ms-vscode.azure-repos",
  "ms-vscode.remote-explorer",
  "ms-vscode.remote-repositories",

  # Jupyter
  "ms-toolsai.jupyter",
  "ms-toolsai.jupyter-keymap",
  "ms-toolsai.jupyter-renderers",
  "ms-toolsai.vscode-jupyter-cell-tags",
  "ms-toolsai.vscode-jupyter-slideshow",

  # LSPs and friends
  "nefrob.vscode-just-syntax",
  "redhat.java",
  "redhat.vscode-xml",
  "redhat.vscode-yaml",
  "sumneko.lua",
  "tamasfe.even-better-toml",

  # Python
  "charliermarsh.ruff",
  "detachhead.basedpyright",
  "joshrmosier.streamlit-runner",
  "kevinrose.vsc-python-indent",
  "marimo-team.vscode-marimo",
  "ms-python.black-formatter",
  "ms-python.debugpy",
  "ms-python.python",
  "plotlydashsnippets.plotly-dash-snippets",

  # JavaScript
  "dbaeumer.vscode-eslint",
  "ms-vscode.js-debug-nightly",

  # HTML
  "formulahendry.auto-close-tag",
  "formulahendry.auto-complete-tag",
  "formulahendry.auto-rename-tag",
  "george-alisson.html-preview-vscode",
  "mohd-akram.vscode-html-format",

  # Markdown
  "bierner.markdown-mermaid",
  "bierner.markdown-yaml-preamble",
  "bpruitt-goddard.mermaid-markdown-syntax-highlighting",
  "darkriszty.markdown-table-prettify",
  "davidanson.vscode-markdownlint",
  "yzhang.markdown-all-in-one",
  "felixzeller.markdown-oxide",
  "marvhen.reflow-markdown",

  # LaTeX
  "james-yu.latex-workshop",

  # SQL
  "inferrinizzard.prettier-sql-vscode",

  # CSV & spreadsheets
  "grapecity.gc-excelviewer",
  "mechatroner.rainbow-csv",
  "ms-toolsai.datawrangler",
  "janisdd.vscode-edit-csv",

  # Data viewers
  "randomfractalsinc.geo-data-viewer",
  "randomfractalsinc.vscode-data-preview",

  # Misc utilities
  "spadin.zmk-tools",
  "formulahendry.code-runner",
  "techer.open-in-browser",
  "tomoki1207.pdf"
]

# ============================================================================ #
#                               LINUX PACKAGES                                #
# ============================================================================ #

[packages.linux]

# Core packages available via APT (Ubuntu/Debian)
apt = [
  # Development essentials
  "build-essential",
  "curl",
  "wget",
  "git",
  "vim",
  "neovim",
  
  # Shell and terminal tools
  "zsh",
  "tmux",
  "htop",
  "tree",
  "unzip",
  "zip",
  
  # Languages and runtimes
  "nodejs",
  "npm",
  "python3",
  "python3-pip",
  "python3-venv",
  
  # Additional utilities (if available in repos)
  "ripgrep",
  "fd-find",
  "bat",
  "exa",  # or "eza" on newer systems
  
  # Development tools
  "shellcheck",
  "jq",
  
  # System utilities
  "software-properties-common",
  "apt-transport-https",
  "ca-certificates",
  "gnupg",
  "lsb-release"
]

# Flatpak applications (cross-distribution)
# Based on your existing .config/Flatpakfile
flatpak = [
  "com.calibre_ebook.calibre",
  "com.slack.Slack",
  "md.obsidian.Obsidian",
  "me.iepure.devtoolbox",
  "org.inkscape.Inkscape",
  "org.jupyter.JupyterLab",
  "org.kicad.KiCad",
  "org.libreoffice.LibreOffice",
  "org.mozilla.firefox",
  "org.sqlitebrowser.sqlitebrowser",
  "org.videolan.VLC",
  "org.zotero.Zotero",
  "us.zoom.Zoom"
]

# Snap packages (Ubuntu and derivatives)
snap = [
  "code",           # Visual Studio Code
  "discord",
  "postman",
  "insomnia",
  # "docker",       # Better installed via apt for most systems
  # "kubectl",
  # "helm"
]

# ============================================================================ #
#                           LANGUAGE-SPECIFIC PACKAGES                        #
# ============================================================================ #

# Rust packages (cargo install)
[packages.cargo]
crates = [
  # Core utilities (faster alternatives to standard tools)
  "ripgrep",          # rg - faster grep
  "fd-find",          # fd - faster find
  "exa",              # Modern ls replacement (or "eza" for newer version)
  "bat",              # Better cat with syntax highlighting
  "zoxide",           # Smart cd replacement
  "tokei",            # Count code, quickly
  "hyperfine",        # Command-line benchmarking tool
  "dust",             # More intuitive version of du
  "procs",            # Modern replacement for ps
  
  # Development tools
  "cargo-update",     # Update installed cargo packages
  "cargo-edit",       # Add/remove dependencies from command line
  "cargo-watch",      # Watch for changes and run cargo commands
  "cargo-expand",     # Show macro-expanded code
  "cargo-audit",      # Audit dependencies for security vulnerabilities
  "cargo-outdated",   # Display outdated dependencies
  "cargo-tree",       # Visualize dependency graphs
  "cargo-bloat",      # Find what takes most space in the executable
  
  # Productivity tools
  "starship",         # Cross-shell prompt
  "navi",             # Interactive cheatsheet tool
  "xh",               # HTTPie clone (user-friendly HTTP client)
  "git-delta",        # Better git diff
  "bottom",           # System monitor (btm command)
  "bandwhich",        # Terminal bandwidth utilization tool
  "lsd",              # Next gen ls command
  "tealdeer",         # Fast tldr client (tldr command)
  
  # Text processing
  "sd",               # Intuitive find & replace CLI
  "choose",           # Human-friendly cut alternative
  "htmlq",            # jq but for HTML
  
  # System utilities
  "grex",             # Generate regular expressions from test cases
  "skim",             # Fuzzy finder (sk command)
  "mcfly",            # Smart command history search
  "zellij",           # Terminal workspace
  
  # Fun/experimental
  "onefetch",         # Git repository summary (like neofetch for git)
  "commitizen",       # Conventional commit tool
]

# Node.js packages (npm install -g)
[packages.npm]
global = [
  # Development tools
  "typescript",
  "ts-node",
  "@typescript-eslint/eslint-plugin",
  "@typescript-eslint/parser",
  "eslint",
  "prettier",
  "nodemon",
  "concurrently",
  
  # Build tools
  "webpack",
  "webpack-cli",
  "vite",
  "rollup",
  "parcel",
  
  # Testing
  "jest",
  "mocha",
  "cypress",
  "playwright",
  
  # Utilities
  "http-server",
  "json-server",
  "serve",
  "npm-check-updates",
  "npm-check",
  
  # Documentation
  "mermaid-cli",      # Diagram generation
  "@marp-team/marp-cli", # Markdown presentations
  
  # Productivity
  "fkill-cli",        # Kill processes
  "speed-test",       # Internet speed test
  "gtop",             # System monitoring
  "tldr",             # Simplified man pages
  
  # Development servers
  "live-server",
  "browser-sync",
  
  # API tools
  "newman",           # Postman CLI
  
  # Package management
  "yarn",
  "pnpm"
]

# Python packages (pip install --user)
[packages.python]
global = [
  # Development tools
  "black",             # Code formatter
  "flake8",           # Linter
  "mypy",             # Type checker
  "isort",            # Import sorter
  "autopep8",         # PEP8 formatter
  "bandit",           # Security linter
  "pre-commit",       # Git hooks
  
  # Testing
  "pytest",
  "pytest-cov",
  "coverage",
  
  # Jupyter ecosystem
  "jupyter",
  "jupyterlab",
  "notebook",
  "ipython",
  "ipykernel",
  
  # Data science (optional, heavy dependencies)
  # "numpy",
  # "pandas",
  # "matplotlib",
  # "seaborn",
  # "scikit-learn",
  
  # Web development
  "flask",
  "fastapi",
  "uvicorn",
  "requests",
  "httpx",
  
  # Utilities
  "pipenv",           # Virtual environment management
  "poetry",           # Dependency management
  "cookiecutter",     # Project templates
  "rich",             # Rich text library for terminal
  "click",            # Command line interface creation
  "typer",            # Modern CLI framework
  
  # System utilities
  "psutil",           # System monitoring
  "python-dotenv",    # Environment variable management
  
  # Documentation
  "mkdocs",
  "mkdocs-material",
  "sphinx"
]

# Ruby gems (gem install)
[packages.ruby]
gems = [
  "bundler",
  "rake",
  "pry",              # Better IRB
  "rubocop",          # Linter
  "solargraph",       # Language server
  "jekyll",           # Static site generator
  "rouge",            # Syntax highlighter
  "ffi",              # Foreign function interface
  "sassc",            # Sass compiler
]

# Go packages (go install)
[packages.go]
binaries = [
  "github.com/junegunn/fzf@latest",
  "github.com/charmbracelet/glow@latest",        # Markdown renderer
  "github.com/charmbracelet/vhs@latest",         # Terminal GIFs
  "github.com/jesseduffield/lazygit@latest",     # Git TUI
  "github.com/jesseduffield/lazydocker@latest",  # Docker TUI
  "github.com/cli/cli/v2/cmd/gh@latest",         # GitHub CLI
  "github.com/goreleaser/goreleaser@latest",     # Release automation
  "github.com/golangci/golangci-lint/cmd/golangci-lint@latest", # Linter
]

# ============================================================================ #
#                                 ALTERNATIVES                                #
# ============================================================================ #
# Alternative installation methods for packages that might not be available
# in primary repositories

[packages.alternatives]

# Manual installation URLs or commands
# These would need custom scripts to handle
manual = [
  # "https://github.com/sharkdp/bat/releases",
  # "https://github.com/BurntSushi/ripgrep/releases",
  # "https://github.com/ajeetdsouza/zoxide/releases"
]

# AppImage applications (Linux)
appimage = [
  # "neovim",
  # "obsidian",
]

# Binary releases to download
binary_releases = [
  # Structure: "name" = { url = "...", version = "latest" }
  # These would need custom installation scripts
]
