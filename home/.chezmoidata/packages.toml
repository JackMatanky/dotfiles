# -----------------------------------------------------------------------------
# File: packages.toml - Based exactly on ~/dotfiles/Brewfile
# Purpose: Declarative package list consumed by chezmoi run_onchange scripts
# -----------------------------------------------------------------------------

[packages.darwin]

# ----------------------- Homebrew Taps ---------------------- #
taps = [
  "homebrew/bundle",
  "homebrew/services",
  "zegervdv/zathura",
  "jesseduffield/lazygit",
  "felixkratz/formulae",
  "nikitabobko/tap"
]

# ------------------------ Brew Packages --------------------- #
brews = [
  # Shells
  "bash",
  "nushell",

  # Terminal Environment
  "zellij",
  "tmux",
  "tpm",

  # Dotfiles Managers
  "stow",
  "chezmoi",

  # Environment Management
  "direnv",
  "just",
  "keychain",
  "bitwarden-cli",

  # Scripting & Development
  "shellcheck",
  "shfmt",

  # Shell Enhancements
  "atuin",
  "carapace",
  "starship",
  "yazi",

  # Shell Plugins
  "bash-completion@2",
  "zsh-autosuggestions",
  "zsh-syntax-highlighting",

  # CLI Utilities
  "eza",
  "fzf",
  "zoxide",
  "fd",
  "ripgrep",
  "bat",
  "sd",
  "tlrc",
  "jq",
  "sourcemeta/apps/jsonschema",

  # AI Tools
  "gemini-cli",
  "codex",
  "ollama",

  # Version Control
  "git",
  "git-sizer",
  "git-lfs",
  "git-filter-repo",
  "git-delta",
  "gitleaks",
  "jesseduffield/lazygit/lazygit",
  "gh",
  "pre-commit",

  # Languages & Runtimes
  "go",
  "lua",
  "mysql",
  "node",
  "openjdk",
  "postgresql@17",
  "python@3.13",
  "ruby",

  # Language Servers
  "lua-language-server",
  "marksman",
  "basedpyright",
  "rust-analyzer",
  "solargraph",
  "texlab",
  "typescript-language-server",
  "vscode-langservers-extracted",
  "yaml-language-server",

  # Python Toolchain
  "pyenv",
  "pyenv-virtualenv",
  "uv",
  "ipython",
  "jupyterlab",
  "jupytext",

  # Lua Toolchain
  "luajit",
  "luarocks",

  # Linters & Formatters
  "prettier",
  "cspell",
  "golangci-lint",
  "markdownlint-cli2",
  "ruff",
  "sqlfluff",
  "sql-formatter",
  "stylua",

  # Modal Editors
  "neovim",

  # Document Processing & Viewing
  "zathura",
  "zathura-pdf-mupdf",
  "pandoc",
  "img2pdf",
  "qpdf",
  "poppler",

  # OCR
  "ocrmypdf",
  "tesseract",

  # Image Processing
  "imagemagick",
  "webp",
  "libavif",
  "graphviz",

  # Multimedia
  "ffmpeg",

  # macOS-specific CLI
  "ical-buddy",
  "switchaudio-osx",
  "nowplaying-cli",
  "felixkratz/formulae/borders",

  # Mac App Store helper
  "mas"
]

# Services to restart on change
services_restart_on_change = [
  "atuin",
  "mysql",
  "postgresql@17"
]

# ------------------------ Casks (GUI Apps) ------------------ #
casks = [
  # Terminal Emulators
  "ghostty",
  "warp",

  # IDEs & Editors
  "zed",
  "zed@preview",
  "visual-studio-code",

  # SQL Clients
  "mysqlworkbench",
  "pgadmin4",

  # Knowledge Management (PKM)
  "obsidian",
  "anki",
  "calibre",
  "zotero",
  "xournal++",

  # Office & Document Tools
  "libreoffice",
  "libreoffice-language-pack",
  "sioyek",
  "adobe-digital-editions",

  # Productivity Tools
  "nikitabobko/tap/aerospace",
  "displaylink",
  "espanso",

  # AI Tools
  "chatgpt",
  "claude",
  "claude-code",
  "lm-studio",
  "ollama",

  # Cloud Storage
  "google-drive",
  "onedrive",

  # Media Players
  "vlc",

  # Communication
  "slack",
  "zoom",

  # Miscellaneous
  "kicad",
  "qbittorrent",
  "bitwarden",

  # Fonts
  "sf-symbols",
  "font-fira-code-nerd-font",
  "font-hack-nerd-font",
  "font-jetbrains-mono-nerd-font",
  "font-sf-mono",
  "font-sf-pro"
]

# -------------------- Mac App Store (MAS) ------------------- #
[packages.darwin.mas]
OneDrive = 823_766_827
PDFgear = 6_469_021_132

# Apple Built-ins
iMovie = 408_981_434
Keynote = 409_183_694
Numbers = 409_203_825
Pages = 409_201_541

# Safari Extensions
AdBlock = 1_402_042_596
Bitwarden = 1_352_778_147
"Documents Translator" = 1_566_993_561
"G App Launcher" = 1_543_803_459
Mailbutler = 1_313_355_438
"Obsidian Web Clipper" = 6_720_708_363
OneTab = 1_540_160_809

# -------------------- VS Code Extensions -------------------- #
vscode = [
  # UI & Themes
  "catppuccin.catppuccin-vsc",
  "ibm.output-colorizer",
  "naumovs.color-highlight",
  "oderwat.indent-rainbow",
  "vscode-icons-team.vscode-icons",

  # Code Navigation & Productivity
  "alefragnani.project-manager",
  "gruntfuggly.todo-tree",

  # Productivity & AI Utilities
  "albert.tabout",
  "almenon.arepl",
  "codeium.codeium",
  "github.copilot",
  "github.copilot-chat",
  "ionutvmi.path-autocomplete",
  "njpwerner.autodocstring",
  "randomfractalsinc.snippets-viewer",

  # Comments
  "aaron-bond.better-comments",
  "dnut.rewrap-revived",
  "exodiusstudios.comment-anchors",
  "polymermallard.box-comment",
  "stackbreak.comment-divider",

  # RegEx
  "chrmarti.regex",
  "louiswt.regexp-preview",

  # Vim & Modal Editing
  "asvetliakov.vscode-neovim",
  "julianiaquinandi.nvim-ui-modifier",
  "lancewilhelm.nvim-dashboard",
  "vspacecode.whichkey",

  # Linters & Formatters
  "esbenp.prettier-vscode",
  "editorconfig.editorconfig",
  "lacroixdavid1.vscode-format-context-menu",
  "shardulm94.trailing-spaces",
  "streetsidesoftware.code-spell-checker",

  # Environment
  "mikestead.dotenv",

  # Shell Utilities
  "constneo.vscode-nushell-format",
  "foxundermoon.shell-format",
  "thenuprojectcontributors.vscode-nushell-lang",
  "timonwong.shellcheck",

  # Git & Version Control
  "github.remotehub",
  "github.vscode-github-actions",
  "github.vscode-pull-request-github",
  "gitlab.gitlab-workflow",
  "mhutchie.git-graph",
  "vivaxy.vscode-conventional-commits",
  "vsls-contrib.gistfs",

  # Remote Repositories
  "ms-vscode-remote.remote-ssh",
  "ms-vscode-remote.remote-ssh-edit",
  "ms-vscode.azure-repos",
  "ms-vscode.remote-explorer",
  "ms-vscode.remote-repositories",

  # Jupyter Notebooks
  "ms-toolsai.jupyter",
  "ms-toolsai.jupyter-keymap",
  "ms-toolsai.jupyter-renderers",
  "ms-toolsai.vscode-jupyter-cell-tags",
  "ms-toolsai.vscode-jupyter-slideshow",

  # Language Server Protocols
  "nefrob.vscode-just-syntax",
  "redhat.java",
  "redhat.vscode-xml",
  "redhat.vscode-yaml",
  "sumneko.lua",
  "tamasfe.even-better-toml",

  # Python
  "charliermarsh.ruff",
  "detachhead.basedpyright",
  "joshrmosier.streamlit-runner",
  "kevinrose.vsc-python-indent",
  "marimo-team.vscode-marimo",
  "ms-python.black-formatter",
  "ms-python.debugpy",
  "ms-python.python",
  "plotlydashsnippets.plotly-dash-snippets",

  # JavaScript
  "dbaeumer.vscode-eslint",
  "ms-vscode.js-debug-nightly",

  # HTML
  "formulahendry.auto-close-tag",
  "formulahendry.auto-complete-tag",
  "formulahendry.auto-rename-tag",
  "george-alisson.html-preview-vscode",
  "mohd-akram.vscode-html-format",

  # Markdown
  "bierner.markdown-mermaid",
  "bierner.markdown-yaml-preamble",
  "bpruitt-goddard.mermaid-markdown-syntax-highlighting",
  "darkriszty.markdown-table-prettify",
  "davidanson.vscode-markdownlint",
  "yzhang.markdown-all-in-one",
  "felixzeller.markdown-oxide",
  "marvhen.reflow-markdown",

  # LaTeX
  "james-yu.latex-workshop",

  # SQL
  "inferrinizzard.prettier-sql-vscode",

  # CSV & Spreadsheet Tools
  "grapecity.gc-excelviewer",
  "mechatroner.rainbow-csv",
  "ms-toolsai.datawrangler",
  "janisdd.vscode-edit-csv",

  # Data Viewer
  "randomfractalsinc.geo-data-viewer",
  "randomfractalsinc.vscode-data-preview",

  # Miscellaneous Utilities
  "spadin.zmk-tools",
  "formulahendry.code-runner",
  "techer.open-in-browser",
  "tomoki1207.pdf"
]

# ------------------------------------------------------------ #
#                          LINUX PACKAGES                      #
# ------------------------------------------------------------ #

[packages.linux]

# -------------------- Flatpak (Cask equivalents) ------------ #
flatpak = [
  # IDEs & Editors (cask equivalents)
  "com.visualstudio.code",           # visual-studio-code
  "dev.zed.Zed",                     # zed

  # Knowledge Management (cask equivalents)
  "md.obsidian.Obsidian",            # obsidian
  "net.ankiweb.Anki",                # anki
  "com.calibre_ebook.calibre",       # calibre
  "org.zotero.Zotero",               # zotero
  "com.github.xournalpp.xournalpp",  # xournal++

  # Office & Document Tools (cask equivalents)
  "org.libreoffice.LibreOffice",     # libreoffice
  "com.github.ahrm.sioyek",          # sioyek
  "com.adobe.Reader",                # adobe-digital-editions

  # Productivity Tools (cask equivalents)
  "org.espanso.Espanso",             # espanso

  # AI Tools (cask equivalents)
  "io.github.lmstudio.LMStudio",     # lm-studio

  # Media Players (cask equivalents)
  "org.videolan.VLC",                # vlc

  # Communication (cask equivalents)
  "com.slack.Slack",                 # slack
  "us.zoom.Zoom",                    # zoom

  # Miscellaneous (cask equivalents)
  "org.kicad.KiCad",                 # kicad
  "org.qbittorrent.qBittorrent",     # qbittorrent
  "com.bitwarden.desktop"            # bitwarden
]

# ---------------------- APT (System/CLI) -------------------- #
# Only packages found in Brewfile brew section
apt = [
  # Core brew equivalents
  "bash",
  "git",
  "git-lfs",
  "neovim",
  "tmux",
  "zsh",
  "nodejs",
  "npm",
  "python3",
  "python3-pip",
  "python3-venv",
  "golang-go",
  "ruby",
  "openjdk-21-jdk",
  "lua5.4",
  "jq",
  "shellcheck",
  "pandoc",
  "imagemagick",
  "ffmpeg",
  "tesseract-ocr",
  "poppler-utils",
  "graphviz"
]

# --------------------- Snap (Fallback) ---------------------- #
# Only Brewfile brew packages not available in APT
snap = [
  # Development Tools (from Brewfile)
  "gh",                      # GitHub CLI (brew 'gh')

  # Modern CLI Tools (from Brewfile, if not in APT)
  "ripgrep",                 # brew 'ripgrep'
  "fd",                      # brew 'fd'
  "bat",                     # brew 'bat'

  # Languages & Runtimes (if APT versions too old)
  "node",                    # brew 'node'
  "go",                      # brew 'go'
]

# ------------------------------------------------------------ #
#                     CROSS-PLATFORM (MINIMAL)                #
# ------------------------------------------------------------ #

# Only Rust/Cargo tools (rust-analyzer is in Brewfile)
[packages.cargo]
crates = [
  "cargo-update"      # Essential for managing cargo packages
]

# Only if prettier not available via brew/apt
[packages.npm]
global = [
  # Empty - prettier available via brew
]

# Only if black not available via brew/apt
[packages.python]
global = [
  # Empty - black available via brew (ruff includes black functionality)
]
