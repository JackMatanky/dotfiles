#!/usr/bin/env bash
{{/* vim: set filetype=bash: */}}
{{- if and (eq .chezmoi.os "linux") .packages.linux.snap }}
# -----------------------------------------------------------------------------
# Script: run_onchange_install-snap-packages.sh.tmpl
# Purpose: Install Snap packages (runs only when Snap package list changes)
# Dependencies: Snapd
# Hash based on: {{ .packages.linux.snap | join "," }}
# -----------------------------------------------------------------------------

set -euo pipefail

{{ template "logging.sh" . }}

log_header "ðŸ“¦ SNAP PACKAGES"

# Check if Snap is available
if ! command -v snap &> /dev/null; then
    log_error "Snap not found. Please install snapd first."
    log_info "Install with: sudo apt install snapd"
    exit 1
fi

log_success "Snap is available"

# Track installation stats
installed_count=0
already_installed_count=0
failed_count=0

{{- range .packages.linux.snap }}
if ! snap list | grep -q "^{{ . }} "; then
    log_info "Installing Snap package: {{ . }}"
    if sudo snap install "{{ . }}"; then
        log_success "Installed: {{ . }}"
        ((installed_count++))
    else
        log_warning "Failed to install: {{ . }}"
        ((failed_count++))
    fi
else
    log_success "Already installed: {{ . }}"
    ((already_installed_count++))
fi
{{- end }}

# Refresh all snaps if we installed any new ones
if [[ $installed_count -gt 0 ]]; then
    log_info "ðŸ”„ Refreshing Snap packages..."
    sudo snap refresh || log_warning "Some snaps failed to refresh"
fi

log_success "âœ… Snap package installation completed!"
log_info "ðŸ“Š Summary:"
log_info "  â€¢ New installations: $installed_count"
log_info "  â€¢ Already installed: $already_installed_count"
log_info "  â€¢ Failed: $failed_count"
log_info "  â€¢ Total Snap packages managed: {{ len .packages.linux.snap }}"

if [[ $failed_count -gt 0 ]]; then
    log_info "ðŸ’¡ Failed packages may require:"
    log_info "  â€¢ Different snap names (check with 'snap find')"
    log_info "  â€¢ Classic confinement (try with --classic flag)"
    log_info "  â€¢ Edge or beta channels (specify with --edge or --beta)"
fi

if [[ $installed_count -gt 0 ]]; then
    log_info "ðŸ”§ Next steps:"
    log_info "  â€¢ Logout and login to refresh PATH for snap binaries"
    log_info "  â€¢ Run 'snap refresh' periodically to update packages"
fi
{{- else }}
#!/usr/bin/env bash
# Snap packages list is empty or not on Linux - skipping Snap installation
exit 0
{{- end }}
