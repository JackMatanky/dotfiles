#!/usr/bin/env bash
{{/* vim: set filetype=bash: */}}
{{- if and (eq .chezmoi.os "linux") .packages.linux.flatpak }}
# -----------------------------------------------------------------------------
# Script: run_onchange_install-flatpak-apps.sh.tmpl
# Purpose: Install Flatpak apps (runs only when Flatpak app list changes)
# Dependencies: Flatpak
# Hash based on: {{ .packages.linux.flatpak | join "," }}
# -----------------------------------------------------------------------------

set -euo pipefail

{{ template "logging.sh" . }}

log_header "ðŸ“¦ FLATPAK APPLICATIONS"

# Check if Flatpak is available
if ! command -v flatpak &> /dev/null; then
    log_error "Flatpak not found. Please install Flatpak first."
    log_info "Install with: sudo apt install flatpak"
    exit 1
fi

# Ensure Flathub repository is added
if ! flatpak remotes | grep -q flathub; then
    log_info "Adding Flathub repository..."
    flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
fi

log_success "Flatpak is available"

# Track installation stats
installed_count=0
already_installed_count=0
failed_count=0

{{- range .packages.linux.flatpak }}
if ! flatpak list --app | grep -q "{{ . }}"; then
    log_info "Installing Flatpak app: {{ . }}"
    if flatpak install -y flathub "{{ . }}"; then
        log_success "Installed: {{ . }}"
        ((installed_count++))
    else
        log_warning "Failed to install: {{ . }}"
        ((failed_count++))
    fi
else
    log_success "Already installed: {{ . }}"
    ((already_installed_count++))
fi
{{- end }}

# Update all Flatpak apps
if [[ $installed_count -gt 0 ]]; then
    log_info "ðŸ”„ Updating Flatpak applications..."
    flatpak update -y || log_warning "Some apps failed to update"
fi

log_success "âœ… Flatpak application installation completed!"
log_info "ðŸ“Š Summary:"
log_info "  â€¢ New installations: $installed_count"
log_info "  â€¢ Already installed: $already_installed_count"
log_info "  â€¢ Failed: $failed_count"
log_info "  â€¢ Total Flatpak apps managed: {{ len .packages.linux.flatpak }}"

if [[ $failed_count -gt 0 ]]; then
    log_info "ðŸ’¡ Failed apps may require:"
    log_info "  â€¢ Manual installation from Flathub"
    log_info "  â€¢ Different app ID or repository"
    log_info "  â€¢ Check app availability in your region"
fi
{{- else }}
#!/usr/bin/env bash
# Flatpak apps list is empty or not on Linux - skipping Flatpak installation
exit 0
{{- end }}
