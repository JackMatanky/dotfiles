{{/* vim: set filetype=bash: */}}
{{- if eq .chezmoi.os "darwin" }}
#!/usr/bin/env bash
# -----------------------------------------------------------------------------
# Script: run_onchange_darwin-install-packages.sh.tmpl
# Purpose: Install macOS packages using Homebrew when packages.toml changes
# Docs: https://www.chezmoi.io/user-guide/advanced/install-packages-declaratively/
# Dependencies: Homebrew, mas
# -----------------------------------------------------------------------------

set -euo pipefail

# Colors for output
readonly RED='\033[0;31m'
readonly GREEN='\033[0;32m'
readonly YELLOW='\033[1;33m'
readonly BLUE='\033[0;34m'
readonly NC='\033[0m' # No Color

# Logging functions
log_info() {
    echo -e "${BLUE}[INFO]${NC} $*"
}

log_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $*"
}

log_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $*"
}

log_error() {
    echo -e "${RED}[ERROR]${NC} $*"
}

# Check if running on macOS
if [[ "$(uname -s)" != "Darwin" ]]; then
    log_error "This script is designed for macOS only"
    exit 1
fi

log_info "🍺 Starting macOS package installation..."

# ============================================================================ #
#                              HOMEBREW SETUP                                 #
# ============================================================================ #

# Install Homebrew if not present
if ! command -v brew &> /dev/null; then
    log_info "Installing Homebrew..."
    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
    
    # Add Homebrew to PATH for Apple Silicon Macs
    if [[ -f "/opt/homebrew/bin/brew" ]]; then
        echo 'eval "$(/opt/homebrew/bin/brew shellenv)"' >> ~/.zprofile
        eval "$(/opt/homebrew/bin/brew shellenv)"
    fi
else
    log_success "Homebrew already installed"
fi

# Update Homebrew
log_info "Updating Homebrew..."
brew update

# ============================================================================ #
#                               HOMEBREW TAPS                                 #
# ============================================================================ #

log_info "🔗 Adding Homebrew taps..."
{{- range .packages.darwin.taps }}
if ! brew tap | grep -q "{{ . }}"; then
    log_info "Adding tap: {{ . }}"
    brew tap {{ . | quote }}
else
    log_success "Tap already added: {{ . }}"
fi
{{- end }}

# ============================================================================ #
#                               BREW FORMULAS                                 #
# ============================================================================ #

log_info "🍺 Installing Homebrew formulas..."

# Create temporary Brewfile for batch installation
cat > /tmp/chezmoi-brewfile << 'EOF'
{{- range .packages.darwin.taps }}
tap {{ . | quote }}
{{- end }}

{{- range .packages.darwin.brews }}
{{- if has . $.packages.darwin.services_restart_on_change }}
brew {{ . | quote }}, restart_service: :changed
{{- else }}
brew {{ . | quote }}
{{- end }}
{{- end }}
EOF

# Install formulas using brew bundle
log_info "Installing formulas from temporary Brewfile..."
brew bundle install --file=/tmp/chezmoi-brewfile --no-lock

# Clean up temporary file
rm -f /tmp/chezmoi-brewfile

# ============================================================================ #
#                                BREW CASKS                                   #
# ============================================================================ #

log_info "📱 Installing Homebrew casks..."

# Set cask installation directory
export HOMEBREW_CASK_OPTS="--appdir=~/Applications"

{{- range .packages.darwin.casks }}
if ! brew list --cask {{ . | quote }} &> /dev/null; then
    log_info "Installing cask: {{ . }}"
    if brew install --cask {{ . | quote }}; then
        log_success "Installed cask: {{ . }}"
    else
        log_warning "Failed to install cask: {{ . }}"
    fi
else
    log_success "Cask already installed: {{ . }}"
fi
{{- end }}

# ============================================================================ #
#                             MAC APP STORE                                   #
# ============================================================================ #

log_info "🏪 Installing Mac App Store applications..."

# Check if mas is available
if command -v mas &> /dev/null; then
    # Check if signed into the App Store
    if mas account &> /dev/null; then
        {{- range $name, $id := .packages.darwin.mas }}
        {{- if ne $name "vscode" }}
        if ! mas list | grep -q "{{ $id }}"; then
            log_info "Installing MAS app: {{ $name }} ({{ $id }})"
            if mas install {{ $id }}; then
                log_success "Installed: {{ $name }}"
            else
                log_warning "Failed to install: {{ $name }} - may need manual installation"
            fi
        else
            log_success "Already installed: {{ $name }}"
        fi
        {{- end }}
        {{- end }}
    else
        log_warning "Not signed into Mac App Store. Please sign in manually to install MAS apps."
        log_info "Run 'mas signin your@email.com' after this script completes"
    fi
else
    log_warning "mas not available. Install with: brew install mas"
fi

# ============================================================================ #
#                             VSCODE EXTENSIONS                               #
# ============================================================================ #

log_info "🔧 Installing VS Code extensions..."

if command -v code &> /dev/null; then
    {{- range .packages.darwin.mas.vscode }}
    if ! code --list-extensions | grep -q "{{ . }}"; then
        log_info "Installing VS Code extension: {{ . }}"
        if code --install-extension {{ . | quote }} --force; then
            log_success "Installed extension: {{ . }}"
        else
            log_warning "Failed to install extension: {{ . }}"
        fi
    else
        log_success "Extension already installed: {{ . }}"
    fi
    {{- end }}
else
    log_warning "VS Code not available. Extensions will be skipped."
fi

# ============================================================================ #
#                               CLEANUP                                       #
# ============================================================================ #

log_info "🧹 Cleaning up Homebrew..."
brew cleanup --prune=all
brew autoremove

# ============================================================================ #
#                              SERVICE MANAGEMENT                             #
# ============================================================================ #

log_info "🔄 Managing services..."
{{- range .packages.darwin.services_restart_on_change }}
if brew services list | grep -q "{{ . }}"; then
    log_info "Restarting service: {{ . }}"
    brew services restart {{ . | quote }} || log_warning "Failed to restart {{ . }}"
fi
{{- end }}

# ============================================================================ #
#                               COMPLETION                                    #
# ============================================================================ #

log_success "🎉 macOS package installation completed!"
log_info "📊 Summary:"
log_info "  • Homebrew taps: {{ len .packages.darwin.taps }}"
log_info "  • Brew formulas: {{ len .packages.darwin.brews }}"
log_info "  • Cask applications: {{ len .packages.darwin.casks }}"
log_info "  • Mac App Store apps: {{ sub (len .packages.darwin.mas) 1 }}"
log_info "  • VS Code extensions: {{ len .packages.darwin.mas.vscode }}"
log_info ""
log_info "💡 Next steps:"
log_info "  • Restart terminal to load new shell configurations"
log_info "  • Sign into Mac App Store if needed: mas signin your@email.com"
log_info "  • Configure installed applications as needed"
{{- end }}
