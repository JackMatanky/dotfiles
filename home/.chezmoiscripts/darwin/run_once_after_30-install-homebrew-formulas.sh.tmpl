#!/usr/bin/env bash
# vim: filetype=bash

# -----------------------------------------------------------------------------
# Script: run_onchange_install-homebrew-formulas.sh.tmpl
# Purpose: Install Homebrew formulas (runs only when formula list changes)
# Dependencies: Homebrew
# -----------------------------------------------------------------------------

{{- if eq .chezmoi.os "darwin" }}

set -euo pipefail

{{ template "logging.sh" . }}

log_header "🍺 HOMEBREW FORMULAS"

# Ensure Homebrew is available
if ! command -v brew &> /dev/null; then
    log_error "Homebrew not found. Please run the Homebrew setup script first."
    exit 1
fi

# Create temporary Brewfile for batch installation
log_info "Creating temporary Brewfile..."
cat > /tmp/chezmoi-brewfile << 'EOF'
{{- range .packages.darwin.taps }}
tap {{ . | quote }}
{{- end }}

{{- range .packages.darwin.brews }}
{{- if has . $.packages.darwin.services_restart_on_change }}
brew {{ . | quote }}, restart_service: :changed
{{- else }}
brew {{ . | quote }}
{{- end }}
{{- end }}
EOF

# Install formulas using brew bundle
log_info "Installing formulas from temporary Brewfile..."
if brew bundle install --file=/tmp/chezmoi-brewfile --no-lock; then
    log_success "Formula installation completed"
else
    log_warning "Some formulas may have failed to install"
fi

# Clean up temporary file
rm -f /tmp/chezmoi-brewfile

# Handle service restarts
{{- if .packages.darwin.services_restart_on_change }}
log_info "🔄 Managing services..."
{{- range .packages.darwin.services_restart_on_change }}
if brew services list | grep -q "{{ . }}"; then
    log_info "Restarting service: {{ . }}"
    brew services restart {{ . | quote }} || log_warning "Failed to restart {{ . }}"
fi
{{- end }}
{{- end }}

log_success "✅ Homebrew formulas installation completed!"
log_info "📊 Summary:"
log_info "  • Total formulas managed: {{ len .packages.darwin.brews }}"
{{- if .packages.darwin.services_restart_on_change }}
log_info "  • Services managed: {{ len .packages.darwin.services_restart_on_change }}"
{{- end }}
{{- end }}
