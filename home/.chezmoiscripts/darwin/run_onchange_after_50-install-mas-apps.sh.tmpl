#!/usr/bin/env bash
{{/* vim: set filetype=bash: */}}
{{- if eq .chezmoi.os "darwin" }}
# -----------------------------------------------------------------------------
# Script: run_onchange_install-mas-apps.sh.tmpl
# Purpose: Install Mac App Store apps (runs only when MAS app list changes)
# Dependencies: mas
# Hash based on: {{ keys .packages.darwin.mas | join "," }}
# -----------------------------------------------------------------------------

set -euo pipefail

{{ template "logging.sh" . }}

log_header "🏪 MAC APP STORE APPS"

# Check if mas is available
if ! command -v mas &> /dev/null; then
    log_error "mas not available. Install with: brew install mas"
    exit 1
fi

# Check if signed into the App Store
if ! mas account &> /dev/null; then
    log_warning "Not signed into Mac App Store."
    log_info "Please sign in manually: mas signin your@email.com"
    log_info "Then run chezmoi apply again to install MAS apps"
    exit 0
fi

log_success "Signed into Mac App Store as: $(mas account)"

# Track installation stats
installed_count=0
already_installed_count=0
failed_count=0

{{- range $name, $id := .packages.darwin.mas }}
if ! mas list | grep -q "{{ $id }}"; then
    log_info "Installing MAS app: {{ $name }} ({{ $id }})"
    if mas install {{ $id }}; then
        log_success "Installed: {{ $name }}"
        ((installed_count++))
    else
        log_warning "Failed to install: {{ $name }} - may need manual installation"
        ((failed_count++))
    fi
else
    log_success "Already installed: {{ $name }}"
    ((already_installed_count++))
fi
{{- end }}

log_success "✅ Mac App Store installation completed!"
log_info "📊 Summary:"
log_info "  • New installations: $installed_count"
log_info "  • Already installed: $already_installed_count"
log_info "  • Failed: $failed_count"
log_info "  • Total MAS apps managed: {{ len .packages.darwin.mas }}"

if [[ $failed_count -gt 0 ]]; then
    log_info "💡 Failed apps may require:"
    log_info "  • Manual purchase/download from App Store"
    log_info "  • Different Apple ID sign-in"
    log_info "  • Region-specific availability check"
fi
{{- end }}
