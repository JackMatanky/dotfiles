# -----------------------------------------------------------------------------
# Filename: ~/.config/aerospace/aerospace.toml
# Docs: https://github.com/nikitabobko/AeroSpace
# Description: Configuration file for the AeroSpace window manager on macOS. It
#              defines startup commands, window rules for specific applications,
#              workspace layouts, keybindings, gaps, and monitor assignments to
#              customize window management behavior.
# -----------------------------------------------------------------------------

after-startup-command = [
  # JankyBorders has a built-in detection of already running process,
  # so it won't be run twice on AeroSpace restart
  # Color Scheme: Catppuccin Macchiato
  #     Active Color: 0xffa5adcb (Subtext 0)
  #     Inactive Color: 0xff494d64 (Surface 1)
  'exec-and-forget borders active_color=0xffa5adcb inactive_color=0xff494d64 width=5.0',
]

# after-startup-command = [
#     'exec-and-forget sketchybar',
#     'exec-and-forget borders active_color=0xffe1e3e4 inactive_color=0xff494d64 width=5.0'
# ]

# # Notify Sketchybar about workspace change
# exec-on-workspace-change = [
#     '/bin/bash',
#     '-c',
#     'sketchybar --trigger aerospace_workspace_change FOCUSED_WORKSPACE=$AEROSPACE_FOCUSED_WORKSPACE',
#     'exec-and-forget borders active_color=0xffe1e3e4 inactive_color=0xff494d64 width=5.0',
# ]

# Start AeroSpace at login
start-at-login = true


# ------------------------------------------------------------ #
#                        Normalizations                        #
# ------------------------------------------------------------ #
# See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true


# ------------------------------------------------------------ #
#                            Layouts                           #
# ------------------------------------------------------------ #
# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
# The 'accordion-padding' specifies the size of accordion padding
# You can set 0 to disable the padding feature
accordion-padding = 300

# Possible values: tiles|accordion
default-root-container-layout = 'tiles'

# Possible values: horizontal|vertical|auto
# 'auto' means:
#     - wide monitor (anything wider than high) gets horizontal orientation,
#     - tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'auto'


# Mouse follows focus when focused monitor changes
# Drop it from your config, if you don't like this behavior
# See https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks
# See https://nikitabobko.github.io/AeroSpace/commands#move-mouse
# Fallback value (if you omit the key): on-focused-monitor-changed = []
on-focused-monitor-changed = ['move-mouse monitor-lazy-center']

# You can effectively turn off macOS "Hide application" (cmd-h)
# feature by toggling this flag Useful if you don't use this macOS
# feature, but accidentally hit cmd-h or cmd-alt-h key
# Also see: https://nikitabobko.github.io/AeroSpace/goodness#disable-hide-app
automatically-unhide-macos-hidden-apps = false


# ------------------------------------------------------------ #
#                   Window Detected Callbacks                  #
# ------------------------------------------------------------ #

# ------------------- Default Configuration ------------------ #
# [[on-window-detected]]
# if.app-id = 'com.apple.systempreferences'
# if.app-name-regex-substring = 'settings'
# if.window-title-regex-substring = 'substring'
# if.workspace = 'workspace-name'
# if.during-aerospace-startup = true
# check-further-callbacks = true
# run = ['layout floating', 'move-node-to-workspace S']  # The callback itsel

# ------------------ Floating Window Layouts ----------------- #
# System Settings
[[on-window-detected]]
if.app-id = 'com.apple.systempreferences'
run = 'layout floating'

# File Finder
[[on-window-detected]]
if.app-id = 'com.apple.finder'
run = 'layout floating'

# MacOS App Store
[[on-window-detected]]
if.app-id = 'com.apple.AppStore'
run = 'layout floating'

# Calculator
[[on-window-detected]]
if.app-id = 'com.apple.calculator'
run = 'layout floating'

# Media Player - VLC
[[on-window-detected]]
if.app-id = 'org.videolan.vlc'
run = 'layout floating'

# Password Manager - Bitwarden
[[on-window-detected]]
if.app-id = 'com.bitwarden.desktop'
run = 'layout floating'

# Password Manager - Apple Passwords
[[on-window-detected]]
if.app-id = 'com.apple.Passwords'
run = 'layout floating'

# --------------- Predifined Workspace Layouts --------------- #
# Obsidian
[[on-window-detected]]
if.app-id = 'md.obsidian'
run = 'move-node-to-workspace 1'

# Browser - Zen
[[on-window-detected]]
if.app-id = 'app.zen-browser.zen'
run = 'move-node-to-workspace 2'

# Browser - Safari
[[on-window-detected]]
if.app-id = 'com.apple.Safari'
run = 'move-node-to-workspace 2'

# IDE - Zed
[[on-window-detected]]
if.app-id = 'dev.zed.Zed'
run = 'move-node-to-workspace 3'

# IDE - Zed Preview
[[on-window-detected]]
if.app-id = 'dev.zed.Zed-Preview'
run = 'move-node-to-workspace 3'

# SRS - Anki
[[on-window-detected]]
if.app-id = 'net.ankiweb.launcher' # Previously 'net.ankiweb.dtop'
run = 'move-node-to-workspace 4'

# Terminal Emulator - Warp
[[on-window-detected]]
if.app-id = 'dev.warp.Warp-Stable'
run = 'move-node-to-workspace 5'

# IDE - Visual Studio Code
[[on-window-detected]]
if.app-id = 'com.microsoft.VSCode'
run = 'move-node-to-workspace 5'

# [[on-window-detected]]
# if.app-id = 'com.vscodium'
# run = 'move-node-to-workspace 5'

# SRS - Anki Notes Editor
# Does not work, do not know why
[[on-window-detected]]
# if.app-id = 'net.ankiweb.dtop'
if.window-title-regex-substring = 'browse\s.*?of.*?notes\sselected.*'
run = 'move-node-to-workspace 6'

# Terminal Emulator - Ghostty
[[on-window-detected]]
if.app-id = 'com.mitchellh.ghostty'
run = 'move-node-to-workspace 7'


# Neovim GUI - Neovide
[[on-window-detected]]
if.app-id = 'com.neovide.neovide'
run = 'move-node-to-workspace 7'

# [[on-window-detected]]
# if.app-id = 'com.github.wez.wezterm'
# run = 'move-node-to-workspace 7'

# Apple Mail
[[on-window-detected]]
if.app-id = 'com.apple.mail'
run = 'move-node-to-workspace 8'

# Slack
[[on-window-detected]]
if.app-id = 'com.tinyspeck.slackmacgap'
run = 'move-node-to-workspace 8'

# ChatGPT
[[on-window-detected]]
if.app-id = 'com.openai.chat'
run = 'move-node-to-workspace 9'

# Gemini
[[on-window-detected]]
if.app-id = 'com.apple.Safari.WebApp.D23A73B0-A971-4778-BA6C-5343B38CA19B'
run = 'move-node-to-workspace 9'

# LM Studio
[[on-window-detected]]
if.app-id = 'com.openai.chat'
run = 'move-node-to-workspace 9'

# NotebookLM
[[on-window-detected]]
if.app-id = 'com.apple.Safari.WebApp.C353A7A6-36B0-464C-B0C9-99528F2760AB'
run = 'move-node-to-workspace 10'

# ------------------------------------------------------------ #
#                          Key Mapping                         #
# ------------------------------------------------------------ #
# Possible values: (qwerty|dvorak)
# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping
[key-mapping]
preset = 'qwerty'

# ------------------------------------------------------------ #
#                      Window Spacing Gaps                     #
# ------------------------------------------------------------ #
# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [
#                    { monitor.main = 16 },
#                    { monitor."some-pattern" = 32 },
#                 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See: https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors

[gaps]
inner.horizontal = 20
inner.vertical = 20
outer.left = 30
outer.bottom = 30
outer.top = [{ monitor.'^built-in retina display$' = 30 }, 30]
outer.right = 30

# ------------------------------------------------------------ #
#                       Main Binding Mode                      #
# ------------------------------------------------------------ #
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# 'main' binding mode must be always presented
# Fallback value (if you omit the key): mode.main.binding = {}
[mode.main.binding]

# All possible keys:
# - Letters.        a, b, c, ..., z
# - Numbers.        0, 1, 2, ..., 9
# - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9
# - F-keys.         f1, f2, ..., f20
# - Special keys.   minus, equal, period, comma, slash, backslash, quote,
#                   semicolon, backtick, leftSquareBracket, rightSquareBracket,
#                   space, enter, esc, backspace, tab
# - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter,
#                   keypadEqual, keypadMinus, keypadMultiply, keypadPlus
# - Arrows.         left, down, up, right

# All possible modifiers: cmd, alt, ctrl, shift

# All possible commands: https://nikitabobko.github.io/AeroSpace/commands

# See: https://nikitabobko.github.io/AeroSpace/commands#exec-and-forget
# You can uncomment the following lines to open up terminal with
# alt + enter shortcut (like in i3)
# alt-enter = '''exec-and-forget osascript -e '
# tell application "Terminal"
#     do script
#     activate
# end tell'
# '''

alt-ctrl-shift-f = 'fullscreen'
alt-ctrl-f = 'layout floating'

# alt-shift-left = 'join-with left'
# alt-shift-down = 'join-with down'
# alt-shift-up = 'join-with up'
# alt-shift-right = 'join-with right'

# See: https://nikitabobko.github.io/AeroSpace/commands#layout
ctrl-alt-slash = 'layout tiles horizontal vertical'
ctrl-alt-comma = 'layout accordion horizontal vertical'

# See: https://nikitabobko.github.io/AeroSpace/commands#focus
alt-h = 'focus left'
alt-j = 'focus down'
alt-k = 'focus up'
alt-l = 'focus right'

# See: https://nikitabobko.github.io/AeroSpace/commands#move
alt-shift-h = 'move left'
alt-shift-j = 'move down'
alt-shift-k = 'move up'
alt-shift-l = 'move right'

# See: https://nikitabobko.github.io/AeroSpace/commands#resize
alt-shift-minus = 'resize smart -50'
alt-shift-equal = 'resize smart +50'

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace
alt-1 = 'workspace 1'
alt-2 = 'workspace 2'
alt-3 = 'workspace 3'
alt-4 = 'workspace 4'
alt-5 = 'workspace 5'
alt-6 = 'workspace 6'
alt-7 = 'workspace 7'
alt-8 = 'workspace 8'
alt-9 = 'workspace 9'
alt-0 = 'workspace 10'

# alt-left = 'workspace prev'
# alt-right = 'workspace next'

# See: https://nikitabobko.github.io/AeroSpace/commands#move-node-to-workspace
alt-shift-1 = 'move-node-to-workspace 1 --focus-follows-window'
alt-shift-2 = 'move-node-to-workspace 2 --focus-follows-window'
alt-shift-3 = 'move-node-to-workspace 3 --focus-follows-window'
alt-shift-4 = 'move-node-to-workspace 4 --focus-follows-window'
alt-shift-5 = 'move-node-to-workspace 5 --focus-follows-window'
alt-shift-6 = 'move-node-to-workspace 6 --focus-follows-window'
alt-shift-7 = 'move-node-to-workspace 7 --focus-follows-window'
alt-shift-8 = 'move-node-to-workspace 8 --focus-follows-window'
alt-shift-9 = 'move-node-to-workspace 9 --focus-follows-window'
alt-shift-0 = 'move-node-to-workspace 10 --focus-follows-window'

# alt-shift-left = 'move-node-to-workspace prev --focus-follows-window'
# alt-shift-right = 'move-node-to-workspace next --focus-follows-window'

alt-tab = 'workspace-back-and-forth'
alt-shift-tab = 'move-workspace-to-monitor --wrap-around next'

# See: https://nikitabobko.github.io/AeroSpace/commands#mode
alt-shift-comma = 'mode service'
# alt-shift-enter = 'mode apps'


# ------------------------------------------------------------ #
#                         App Launcher                         #
# ------------------------------------------------------------ #
alt-ctrl-shift-a = 'exec-and-forget open /Applications/Anki.app'                   # SRS - Anki
alt-ctrl-shift-b = 'exec-and-forget open /Applications/Zen.app'                    # Browser - Zen
alt-ctrl-shift-c = '''exec-and-forget open /Applications/Visual Studio Code.app''' # IDE - Visual Studio Code
alt-ctrl-shift-m = 'exec-and-forget open /Applications/Mail.app'                   # Email - Apple Mail
alt-ctrl-shift-n = 'exec-and-forget open /Applications/Obsidian.app'               # Notes - Obsidian
alt-ctrl-shift-s = 'exec-and-forget open /Applications/Safari.app'                 # Browser - Safari
alt-ctrl-shift-t = 'exec-and-forget open /Applications/Ghostty.app'                # Terminal - Ghostty
alt-ctrl-shift-w = 'exec-and-forget open /Applications/Warp.app'                   # Terminal - Warp
alt-ctrl-shift-z = 'exec-and-forget open /Applications/Zed.app'                    # IDE - Zed Code Editor


# ------------------------------------------------------------ #
#                       Multiple Monitors                      #
# ------------------------------------------------------------ #
# See: https://nikitabobko.github.io/AeroSpace/guide#multiple-monitors
[workspace-to-monitor-force-assignment]
1 = ['VC279', 'S27R65', 'main']
2 = ['ASUS VA27EHE', 'DELL P2419H', 'secondary']
3 = ['VC279', 'S27R65', 'main']
4 = ['ASUS VA27EHE', 'DELL P2419H', 'secondary']
5 = ['VC279', 'S27R65', 'main']
6 = ['ASUS VA27EHE', 'DELL P2419H', 'secondary']
7 = ['VC279', 'S27R65', 'main']
8 = ['ASUS VA27EHE', 'DELL P2419H', 'secondary']
9 = 'Built-in Retina Display'
10 = 'Built-in Retina Display'


# ------------------------------------------------------------ #
#                     Service Binding Mode                     #
# ------------------------------------------------------------ #
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
[mode.service.binding]
esc = ['reload-config', 'mode main']
r = ['flatten-workspace-tree', 'mode main'] # reset layout
f = [
  'layout floating tiling',
  'mode main',
] # Toggle between floating and tiling layout
backspace = ['close-all-windows-but-current', 'mode main']

# sticky is not yet supported https://github.com/nikitabobko/AeroSpace/issues/2
#s = ['layout sticky tiling', 'mode main']

alt-shift-h = ['join-with left', 'mode main']
alt-shift-j = ['join-with down', 'mode main']
alt-shift-k = ['join-with up', 'mode main']
alt-shift-l = ['join-with right', 'mode main']

down = 'volume down'
up = 'volume up'
shift-down = ['volume set 0', 'mode main']
